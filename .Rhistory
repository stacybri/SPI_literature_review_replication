"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes="Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data are from the World Bank's World Development Indicators (WDI) and SPI. In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(press_free_score ~  SPI.INDEX, index=c('country', 'date'), data=reg_df, model='random')
print(paste0("Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(press_free_score~  SPI.INDEX + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=reg_df, model='random')
print(paste0("Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(press_free_score ~  SPI.INDEX.PIL1 + SPI.INDEX.PIL2 + SPI.INDEX.PIL3 + SPI.INDEX.PIL4 + SPI.INDEX.PIL5, index=c('country', 'date'), data=reg_df, model='random')
print(paste0("Model 5: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(press_free_score ~  SPI.INDEX.PIL1 + SPI.INDEX.PIL2 + SPI.INDEX.PIL3 + SPI.INDEX.PIL4 + SPI.INDEX.PIL5 + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=reg_df, model='random')
print(paste0("Model 6: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(eci_value ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(eci_value ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(eci_value ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(eci_value ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(eci_value ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(eci_value ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(eci_value ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(eci_value ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(eci_value ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(eci_value ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(eci_value ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(env_perform_index ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(env_perform_index ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(env_perform_index ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(env_perform_index ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(env_perform_index ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(env_perform_index ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(env_perform_index ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(env_perform_index ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(env_perform_index ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(env_perform_index ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(env_perform_index ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(better_life_index ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(better_life_index ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(better_life_index ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(better_life_index ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(better_life_index ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(better_life_index ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(better_life_index ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(better_life_index ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(better_life_index ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(better_life_index ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(better_life_index ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(hdi_value ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(hdi_value ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(hdi_value ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(hdi_value ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(hdi_value ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(hdi_value ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(hdi_value ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(hdi_value ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(hdi_value ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(hdi_value ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(hdi_value ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(HD.HCI.OVRL ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(HD.HCI.OVRL ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(HD.HCI.OVRL ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(HD.HCI.OVRL ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(HD.HCI.OVRL ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(HD.HCI.OVRL ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(HD.HCI.OVRL ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(HD.HCI.OVRL ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(HD.HCI.OVRL ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(HD.HCI.OVRL ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(HD.HCI.OVRL ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
#create regression models
models <- list(
'ODIN - Model 1' = feols(press_free_score ~  ODIN_score , data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 2' = feols(press_free_score ~  ODIN_score  + factor(date) | country, data=odin_reg_df, se='cluster', cluster='country') ,
'ODIN - Model 3' = feols(press_free_score ~  ODIN_score  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odin_reg_df, se='cluster', cluster='country'),
'ODB - Model 1' = feols(press_free_score ~  odb , data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 2' = feols(press_free_score ~  odb  + factor(date) | country, data=odb_reg_df, se='cluster', cluster='country') ,
'ODB - Model 3' = feols(press_free_score ~  odb  + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD) + factor(date)| country , data=odb_reg_df, se='cluster', cluster='country'),
'GDB - Model 1' = feols(press_free_score ~  gdb , data=gdb_reg_df, se='cluster', cluster='country')
)
modelsummary(models,
estimate= "{estimate}{stars}",
#vcov=list(NULL,"HC1",NULL),
coef_map = c("SPI.INDEX"  = "Overall SPI Score",
"SPI.INDEX.PIL1"  = "SPI Pillar 1 Score (Data use)",
"SPI.INDEX.PIL2"  = "SPI Pillar 2 Score (Data services)",
"SPI.INDEX.PIL3"  = "SPI Pillar 3 Score (Data products)",
"SPI.INDEX.PIL4"  = "SPI Pillar 4 Score (Data sources)",
"SPI.INDEX.PIL5"  = "SPI Pillar 5 Score (Data infrastructure)",
"ODIN_score" = "ODIN Score",
"odb" = "Open Data Barometer Score",
"gdb" = "Global Data Barometer Score",
"NE.TRD.GNFS.ZS" = "Trade (% of GDP)",
"NV.AGR.TOTL.ZS"= "Agriculture, forestry, fishing value added (% of GDP)",
"NV.IND.MANF.ZS"  = "Manufacturing value added (% of GDP)",
"SE.PRM.ENRR" = "School Enrollment, Primary (% gross)" ,
"WGI.OVL" = "WGI Index",
"factor(date)2013"="Year 2013",
"factor(date)2014"="Year 2014",
"factor(date)2015"="Year 2015",
"factor(date)2016"="Year 2016",
"factor(date)2017"="Year 2017",
"factor(date)2018"="Year 2018",
"factor(date)2019"="Year 2019",
"factor(date)2020"="Year 2020",
"factor(date)2021"="Year 2021",
"factor(date)2022"="Year 2022",
"(Intercept)" = "Constant",
"CC.EST" = "WGI: Control of Corruption: Estimate",
"GE.EST" = "WGI: Governance Effectiveness: Estimate",
"PV.EST" = "WGI: Political Stability and Absence of Violence/Terrorism: Estimate",
"RQ.EST" = "WGI: Regulatory Quality: Estimate",
"RL.EST" = "WGI: Rule of Law: Estimate",
"VA.EST" = "WGI: Voice and Accountability: Estimate"),
notes=" Note: * p<0.10, ** p<0.05, *** p<0.01. Standard errors are clustered at the country level. Data from the World Bank's World Development Indicators (WDI), Open Data Watch (ODIN), Global Data Barometer (GDB), and Open Data Barometer (ODB). In cases where data are missing for a particular covariate, the data are imputed forward using the nearest available value. Estimates with country fixed effects not available for the Global Data Barometer, because the indicator contains on ly one time period.",
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = fmt_statistic("estimate" = 3, "std.error" = 2),
escape = FALSE
)
p <- plm::plm(press_free_score ~  ODIN_score, index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
summary(p)
p <- plm::plm(press_free_score ~  ODIN_score + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odin_reg_df, model='random')
print(paste0("ODIN Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(press_free_score ~  odb, index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 2: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
p <- plm::plm(press_free_score ~  odb + NE.TRD.GNFS.ZS + NV.IND.MANF.ZS + NV.AGR.TOTL.ZS +  SE.PRM.ENRR   + log(NY.GDP.PCAP.KD), index=c('country', 'date'), data=odb_reg_df, model='random')
print(paste0("ODB Model 3: sigma_e=",round(sqrt(p$ercomp$sigma2[1]),2), ". sigma_u=",round(sqrt(p$ercomp$sigma2[2]),2)))
plot_correlations <- function(comparison_df, devindex, devindex_names) {
# Get correlations with p-values
index_cor_full <- comparison_df %>%
select(c('SPI.INDEX', 'SCI', 'ODIN_score', 'odb', 'gdb'), devindex) %>%
rename(
SPI = SPI.INDEX,
SCI = SCI,
ODIN = ODIN_score,
ODB = odb,
GDB = gdb
) %>%
as.matrix() %>%
rcorr()
# Get just Pearson correlation
index_cor <- index_cor_full$r
index_cor <- index_cor[6:15, 1:5]
# Round
index_cor <- round(index_cor, 2)
# Color
index_col <- index_cor
index_col[abs(index_cor) >= 0.5] <- "#fcca46"
index_col[abs(index_cor) >= 0.65] <- "#a1c181"
index_col[abs(index_cor) >= 0.8] <- "#619b8a"
index_col[abs(index_cor) < 0.5] <- "white"
# Get statistical significance
index_sig <- index_cor_full$P
index_sig <- index_sig[6:15, 1:5]
rownames(index_cor) <- devindex_names
rownames(index_sig) <- devindex_names
# Create the plot
fig <- as_tibble(cbind(index_cor, index_sig, var = devindex_names), .name_repair = "universal") %>%
mutate(across(c(1:10), as.numeric)) %>%
mutate(SPI = case_when(
between(SPI...6, 0.05, 0.1) ~ paste0(SPI...1, "*"),
between(SPI...6, 0.01, 0.5) ~ paste0(SPI...1, "**"),
between(SPI...6, 0.0, 0.01) ~ paste0(SPI...1, "***"),
is.na(SPI...1) ~ "",
TRUE ~ paste0(SPI...1, "")
),
SCI = case_when(
between(SCI...7, 0.05, 0.1) ~ paste0(SCI...2, "*"),
between(SCI...7, 0.01, 0.5) ~ paste0(SCI...2, "**"),
between(SCI...7, 0.0, 0.01) ~ paste0(SCI...2, "***"),
is.na(SCI...2) ~ "",
TRUE ~ paste0(SCI...2, "")
),
ODIN = case_when(
between(ODIN...8, 0.05, 0.1) ~ paste0(ODIN...3, "*"),
between(ODIN...8, 0.01, 0.5) ~ paste0(ODIN...3, "**"),
between(ODIN...8, 0.0, 0.01) ~ paste0(ODIN...3, "***"),
is.na(ODIN...3) ~ "",
TRUE ~ paste0(ODIN...3, "")
),
ODB = case_when(
between(ODB...9, 0.05, 0.1) ~ paste0(ODB...4, "*"),
between(ODB...9, 0.01, 0.5) ~ paste0(ODB...4, "**"),
between(ODB...9, 0.0, 0.01) ~ paste0(ODB...4, "***"),
is.na(ODB...4) ~ "",
TRUE ~ paste0(ODB...4, "")
),
GDB = case_when(
between(GDB...10, 0.05, 0.1) ~ paste0(GDB...5, "*"),
between(GDB...10, 0.01, 0.5) ~ paste0(GDB...5, "**"),
between(GDB...10, 0.0, 0.01) ~ paste0(GDB...5, "***"),
is.na(GDB...5) ~ "",
TRUE ~ paste0(GDB...5, "")
)
) %>%
mutate(var = factor(var, levels = rev(var)))
ggplot(fig, aes(x = var, y = abs(SPI...1))) +
geom_point(aes(color = "SPI", shape = "SPI", fill = "SPI"), size = 4) +
geom_point(aes(y = abs(SCI...2), color = "SCI", shape = "SCI", fill = "SCI"), size = 4) +
geom_point(aes(y = abs(ODIN...3), color = "ODIN", shape = "ODIN", fill = "ODIN"), size = 4) +
geom_point(aes(y = abs(ODB...4), color = "ODB", shape = "ODB", fill = "ODB"), size = 4) +
geom_point(aes(y = abs(GDB...5), color = "GDB", shape = "GDB", fill = "GDB"), size = 4) +
coord_flip() +
scale_color_manual(
values = c(
"SPI" = "#264653",
"SCI" = "#2a9d8f",
"ODIN" = "#e9c46a",
"ODB" = "#f4a261",
"GDB" = "#e76f51"
)
) +
scale_fill_manual(
values = c(
"SPI" = "#264653",
"SCI" = "#2a9d8f",
"ODIN" = "#e9c46a",
"ODB" = "#f4a261",
"GDB" = "#e76f51"
)
) +
scale_shape_manual(
values = c(
"SPI" = 15,
"SCI" = 6,
"ODIN" = 17,
"ODB" = 18,
"GDB" = 19
)
) +
xlab("") +
ylab("") +
scale_x_discrete(labels = scales::wrap_format(30)) +
theme_spi() +
guides(
fill = guide_legend(' '),
color = guide_legend(' '),
shape = guide_legend(' ')
) +
theme(axis.text.y = element_text(size = 11),
legend.text = element_text(size = 11),
legend.position = 'top')
}
# Example usage:
# plot_correlations(comparison_df, devindex, devindex_names)
#| label: fig5-lic
comparison_lic_df <- comparison_df %>%
filter(income == "LIC")
plot_correlations(comparison_lic_df, devindex, devindex_names)
comparison_df$income
#| label: fig5-lic
comparison_lic_df <- comparison_df %>%
filter(income == "Low income")
plot_correlations(comparison_lic_df, devindex, devindex_names)
#| label: fig5-lmic
#| fig-height: 7
#| fig-width: 8
comparison_lmic_df <- comparison_df %>%
filter(income == "Lower middle income")
plot_correlations(comparison_lmic_df, devindex, devindex_names)
#| label: fig5-umic
#| fig-height: 7
#| fig-width: 8
comparison_umic_df <- comparison_df %>%
filter(income == "Upper middle income")
plot_correlations(comparison_umic_df, devindex, devindex_names)
#| label: fig5-hic
#| fig-height: 7
#| fig-width: 8
comparison_hic_df <- comparison_df %>%
filter(income == "High income")
plot_correlations(comparison_hic_df, devindex, devindex_names)

group_by(iso3c) %>%
filter(all(!is.na(SPI.INDEX))) %>%
filter(all(!is.na(ODIN_score)))
#get trend data
trend_data <- country_progress_data %>%
filter(between(date, 2016, 2020))
#create trend model
SPI_trend_models <- trend_data %>%
group_by(iso3c) %>%
do(model = lm(SPI.INDEX ~ date, data = .),
) %>%
ungroup()
ODIN_trend_models <- trend_data %>%
group_by(iso3c) %>%
do(
model = lm(ODIN_score ~ date, data = .)) %>%
ungroup()
# get prediction data for 2021 and 2022
prediction_data <- country_progress_data %>%
filter(between(date, 2021, 2022))
# Predict using the fitted models
SPI_prediction_data <- prediction_data %>%
left_join(SPI_trend_models, by = "iso3c") %>%
group_by(iso3c) %>%
do(modelr::add_predictions(., first(.$model), var="SPI_predicted_values")) %>%
select(-model)
ODIN_prediction_data <- prediction_data %>%
left_join(ODIN_trend_models, by = "iso3c") %>%
group_by(iso3c) %>%
do(modelr::add_predictions(., first(.$model), var="ODIN_predicted_values")) %>%
select(-model)
#| label: overunder
#| fig-width: 9
#| fig-height: 6
#SPI overperformers
spi_overperformers_df <- SPI_prediction_data %>%
filter(date==2022) %>%
mutate(resid=SPI.INDEX-SPI_predicted_values) %>%
arrange(-resid) %>%
head(15)
spi_underperformers_df <- SPI_prediction_data %>%
filter(date==2022) %>%
mutate(resid=SPI.INDEX-SPI_predicted_values) %>%
arrange(resid) %>%
head(15)
spi_overperformers_plot <-  spi_overperformers_df %>%
bind_rows(spi_underperformers_df) %>%
arrange(resid)
spi_overperformers_plot <- spi_overperformers_plot %>%
mutate(country=factor(country, levels=unique(spi_overperformers_plot$country)),
group=if_else(resid>=0, 'above','below')) %>%
ggplot(aes(x=country, y=resid, color=group)) +
geom_segment( aes(x=country ,xend=country, y=0, yend=resid), color="black") +
geom_point(size=3) +
scale_color_manual(name="",
labels = c("Over-performers", "Under-performers"),
values = c('above'="#1A9850", 'below'="#D73027")) +
coord_flip() +
theme_spi() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'bottom'
) +
xlab("") +
ylab("SPI (deviation)")
# do same for ODIN
odin_overperformers_df <- ODIN_prediction_data %>%
filter(date==2022) %>%
mutate(resid=ODIN_score-ODIN_predicted_values) %>%
arrange(-resid) %>%
head(15)
odin_underperformers_df <- ODIN_prediction_data %>%
filter(date==2022) %>%
mutate(resid=ODIN_score-ODIN_predicted_values) %>%
arrange(resid) %>%
head(15)
odin_overperformers_plot <-  odin_overperformers_df %>%
bind_rows(odin_underperformers_df) %>%
arrange(resid)
odin_overperformers_plot <- odin_overperformers_plot %>%
mutate(country=factor(country, levels=unique(odin_overperformers_plot$country)),
group=if_else(resid>=0, 'above','below')) %>%
ggplot(aes(x=country, y=resid, color=group)) +
geom_segment( aes(x=country ,xend=country, y=0, yend=resid), color="black") +
geom_point(size=3) +
scale_color_manual(name="",
labels = c("Over-performers", "Under-performers"),
values = c('above'="#1A9850", 'below'="#D73027")) +
coord_flip() +
theme_spi() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none',
) +
xlab("") +
ylab("ODIN (deviation)")
spi_overperformers_plot + odin_overperformers_plot +
plot_annotation(
# title='Top 15 Over/Under-Performers on SPI overall score compared to GDP per capita and Human Capital Index',
caption=str_wrap('Over and under performers calculated by taking a country specific time trend using OLS regression of SPI overall score or ODIN score on the year using data from 2016 to 2020 and calculting residuals from this regression in 2022.',100)
)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c("Bottom 20%", "2nd Quintile", "3rd Quintile", "4th Quintile", "Top Quintile"))) %>%
select(country, iso3c, date, starts_with('SPI.INDEX'))
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c("Bottom 20%", "2nd Quintile", "3rd Quintile", "4th Quintile", "Top Quintile"))) %>%
select(country, iso3c, date, starts_with('ODIN'))
View(ODIN_quantiles)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE)) %>%
select(country, iso3c, date, starts_with('SPI.INDEX'))
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE)) %>%
select(country, iso3c, date, starts_with('ODIN'))
View(ODIN_quantiles)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, starts_with('SPI.INDEX'))
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, starts_with('ODIN'))
View(ODIN_quantiles)
pivot_wider
?pivot_wider
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
)
View(quantiles_df)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=SPI.INDEX.quintile_2022-SPI.INDEX.quintile_2016,
odin_movers=ODIN.quintile_2022-ODIN.quintile_2016)
View(quantiles_df)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016))
View(quantiles_df)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers))
View(quantiles_df)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(conflict)
View(quantiles_df)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
quantiles %>%
head(n=20)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
quantiles_df %>%
head(n=20)
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
flextable() %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
mutate(across(c( 'SPI.INDEX.quintile_2016', 'SPI.INDEX.quintile_2022', 'ODIN.quintile_2016', 'ODIN.quintile_2022'), as.numeric))
flextable() %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
mutate(across(c( 'SPI.INDEX.quintile_2016', 'SPI.INDEX.quintile_2022', 'ODIN.quintile_2016', 'ODIN.quintile_2022'), as.numeric)) %>%
flextable() %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
mutate(across(c( 'SPI.INDEX.quintile_2016', 'SPI.INDEX.quintile_2022', 'ODIN.quintile_2016', 'ODIN.quintile_2022'), as.numeric)) %>%
flextable() %>%
set_header_labels(values=list(
country="Country",
SPI.INDEX.quintile_2016="2016 SPI overall score",
SPI.INDEX.quintile_2022="2022 SPI overall score",
ODIN.quintile_2016="2016 ODIN overall score",
ODIN.quintile_2022="2022 ODIN overall score",
)) %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))
SPI_quantiles <- SPI %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(SPI.INDEX.quintile = cut(SPI.INDEX, quantile(SPI.INDEX, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, SPI.INDEX.quintile)
ODIN_quantiles <- odin_df %>%
filter(date>2015) %>%
group_by(date) %>%
mutate(ODIN.quintile = cut(ODIN_score, quantile(ODIN_score, probs=c(0,0.2,.4,.6,.8,1), na.rm=T), right=FALSE, include.lowest=TRUE, labels=c(1, 2, 3, 4, 5))) %>%
select(country, iso3c, date, ODIN.quintile)
quantiles_df <- SPI_quantiles %>%
left_join(ODIN_quantiles) %>%
pivot_wider(
names_from=date,
names_glue="{.value}_{date}",
values_from=c(SPI.INDEX.quintile, ODIN.quintile)
) %>%
mutate(spi_movers=as.numeric(SPI.INDEX.quintile_2022)-as.numeric(SPI.INDEX.quintile_2016),
odin_movers=as.numeric(ODIN.quintile_2022)-as.numeric(ODIN.quintile_2016),
conflict=abs(spi_movers-odin_movers)) %>%
arrange(-conflict)
col_palette <- c("#2ec4b6", "#acece7", "#f1dc76",  "#ffbf69","#ff9f1c"   )
brks <- c(1,2,3,4,5)
quantiles_df %>%
head(n=20) %>%
select(country, SPI.INDEX.quintile_2016, SPI.INDEX.quintile_2022, ODIN.quintile_2016, ODIN.quintile_2022 ) %>%
mutate(across(c( 'SPI.INDEX.quintile_2016', 'SPI.INDEX.quintile_2022', 'ODIN.quintile_2016', 'ODIN.quintile_2022'), as.numeric)) %>%
flextable() %>%
set_header_labels(values=list(
country="Country",
SPI.INDEX.quintile_2016="2016 SPI overall score",
SPI.INDEX.quintile_2022="2022 SPI overall score",
ODIN.quintile_2016="2016 ODIN overall score",
ODIN.quintile_2022="2022 ODIN overall score"
)) %>%
bg(j = c('SPI.INDEX.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))  %>%
bg(j = c('SPI.INDEX.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2016'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE)) %>%
bg(j = c('ODIN.quintile_2022'),
bg = scales::col_bin(col_palette, domain=c(0,100), bins=brks, reverse=TRUE))

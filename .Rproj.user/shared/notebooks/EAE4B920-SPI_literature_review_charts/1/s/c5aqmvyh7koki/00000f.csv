"0","# Create a correlation matrix"
"0","cor_matrix <- index_cor"
"0",""
"0","# Function to calculate p-value from z-score"
"0","p_value_from_z <- function(z) {"
"0","  2 * (1 - pnorm(abs(z)))"
"0","}"
"0",""
"0","# Iterate through the correlation matrix"
"0","n <- nrow(cor_matrix)"
"0","c <- ncol(cor_matrix)"
"0","p_values <- matrix(NA, n, c*c)  # Store p-values for each pairwise comparison"
"0",""
"0","for (i in 1:n) {"
"0","  for (j in 1:c) {"
"0","    for (k in 1:c) {"
"0","      # Step 2: Convert to Fisher's z-scores using atanh()"
"0","      row1 <- i"
"0","      col1 <- j"
"0","      correlation_1 <- cor_matrix[row1,col1]"
"0","      "
"0","      row2 <- i"
"0","      col2 <- k"
"0","      correlation_2 <- cor_matrix[row2, col2]"
"0","      "
"0","      z_score_1 <- atanh(correlation_1)"
"0","      z_score_2 <- atanh(correlation_2)"
"0","    "
"0","      # Step 3: Calculate standard errors of z-transformed correlations"
"0","      n_1 <- 100  # Sample size for correlation_1"
"0","      n_2 <- 150  # Sample size for correlation_2"
"0","      se_1 <- 1 / sqrt(n_1 - 3)"
"0","      se_2 <- 1 / sqrt(n_2 - 3)"
"0","    "
"0","      # Step 4: Perform z-test for the difference between z-scores"
"0","      z_diff <- (z_score_1 - z_score_2) / sqrt(se_1^2 + se_2^2)"
"0","      "
"0","      # Calculate p-value"
"0","      pos <- (j-1)*5+k"
"0","      pval <- p_value_from_z(z_diff)"
"0","      "
"0","      if (k==1 & pval > 0.05)  {"
"0","        txt <- ""GDB"""
"0","      } else if (k==2 & pval > 0.05) {"
"0","        txt <- ""ODB"""
"0","      } else if (k==3  & pval > 0.05) {"
"0","        txt <- ""ODIN"""
"0","      } else if (k==4  & pval > 0.05) {"
"0","        txt <- ""SCI"""
"0","      } else if (k==5  & pval > 0.05) {"
"0","        txt <- ""SPI"""
"0","      } else {"
"0","        txt <- """""
"0","      }"
"0","      p_values[i, pos] <- txt"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","#format as table"
"0","pval_df <- as.data.frame(p_values) %>%"
"0","  cbind(SDG=sdg_names) %>%"
"0","  select(SDG, everything()) "
"0",""
"0",""
"0","# colnames(pval_df) <- c('SDG', "
"0","#                        rep('GDB',5),"
"0","#                        rep('ODB',5),"
"0","#                        rep('ODIN',5),"
"0","#                        rep('SCI',5),"
"0","#                        rep('SPI',5))"
"0",""
"0","flextable(pval_df) %>%"
"0","  set_header_labels("
"0","    SDG=""SDG"","
"0","    V1=""GDB"",V2=""GDB"",V3=""GDB"",V4=""GDB"",V5=""GDB"","
"0","    V6=""ODB"",V7=""ODB"",V8=""ODB"",V9=""ODB"",V10=""ODB"","
"0","    V11=""ODIN"",V12=""ODIN"",V13=""ODIN"",V14=""ODIN"",V15=""ODIN"","
"0","    V16=""SCI"",V17=""SCI"",V118=""SCI"",V19=""SCI"",V20=""SCI"","
"0","    V21=""SPI"",V22=""SPI"",V23=""SPI"",V24=""SPI"",V25=""SPI"""
"0","  ) %>%"
"0","  merge_at(i=1,j=2:6, part = 'header') %>%"
"0","  merge_at(i=1,j=7:11, part = 'header') %>%"
"0","  merge_at(i=1,j=12:16, part = 'header') %>%"
"0","  merge_at(i=1,j=17:21, part = 'header') %>%"
"0","  merge_at(i=1,j=22:26, part = 'header') %>%"
"0","  vline(j=1) %>%"
"0","  vline(j=6) %>%"
"0","  vline(j=11) %>%"
"0","  vline(j=16) %>%"
"0","  vline(j=21) %>%"
"0","  align(i=1, part=""header"", align=""center"")"

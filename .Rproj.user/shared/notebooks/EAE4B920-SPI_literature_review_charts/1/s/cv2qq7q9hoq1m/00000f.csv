"0","#| label: decompstacked"
"0",""
"0","  decomp_stacked_df <- SPI %>%"
"0","    filter(date==2022) %>%"
"0","    select(country, income, iso3c, date, starts_with('SPI.INDEX')) %>%"
"0","    filter(!is.na(SPI.INDEX)) "
"0","    "
"0","  "
"0","  #summarise into decile bins"
"0","  decomp_stacked_df <- decomp_stacked_df %>%"
"0","    group_by(income) %>%"
"0","    summarise(across(starts_with('SPI.INDEX'), mean, na.rm=T)) %>%"
"0","    pivot_longer("
"0","      cols=c('SPI.INDEX.PIL1', 'SPI.INDEX.PIL2', 'SPI.INDEX.PIL3', 'SPI.INDEX.PIL4', 'SPI.INDEX.PIL5'),"
"0","      values_to='level',"
"0","      names_to='Pillar'"
"0","    ) %>%"
"0","    mutate(Pillar=case_when("
"0","      Pillar==""SPI.INDEX.PIL1"" ~ ""Pillar 1: Data Use"","
"0","      Pillar==""SPI.INDEX.PIL2"" ~ ""Pillar 2: Data Services"","
"0","      Pillar==""SPI.INDEX.PIL3"" ~ ""Pillar 3: Data Products"","
"0","      Pillar==""SPI.INDEX.PIL4"" ~ ""Pillar 4: Data Sources"","
"0","      Pillar==""SPI.INDEX.PIL5"" ~ ""Pillar 5: Data Infrastructure"""
"0","    )) %>%"
"0","    group_by(income) %>%"
"0","    mutate(level=level/5,"
"0","           total=sum(level)) #divide by 5 so that Pillar scores sum to overall score.  This puts equal weight on each Pillar in the sum"
"2","Warning: [38;5;255mThere was 1 warning in `summarise()`.[39m
[38;5;255m[36mâ„¹[38;5;255m In argument: `across(starts_with(""SPI.INDEX""), mean, na.rm = T)`.
[36mâ„¹[38;5;255m In group 1: `income = ""High income""`.[39m
Caused by warning:
[38;5;255m[33m![38;5;255m The `...` argument of `across()` is deprecated as of dplyr 1.1.0.
Supply arguments directly to `.fns` through an anonymous function instead.

  # Previously
  across(a:b, mean, na.rm = TRUE)

  # Now
  across(a:b, \(x) mean(x, na.rm = TRUE))
[90mThis warning is displayed once every 8 hours.[38;5;255m
[90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.[38;5;255m[39m"
"0","  "
